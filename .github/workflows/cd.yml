name: Continuous delivery in GitHub and Maven Central Repository

on:
  push:
    branch:
      - 'rc-test/v*'

jobs:
  create_release_draft:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: get_tag
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - name: Run action release-drafter
        id: release_drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
      id: ${{ steps.release_drafter.outputs.id }}
      upload_url: ${{ steps.release_drafter.outputs.upload_url }}
  upload_artifact:
    needs: create_release_draft
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Prepare signing secret key ring file
        run: echo "${{ secrets.NEXUS_SIGNING_SECRET_KEY_BASE64 }}" | base64 --decode > ./secret_key.gpg
      - name: Build project
        run: |
          chmod +x ./gradlew
          ./gradlew shadowJar

      - name: Upload artifact to Nexus
        env:
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.NEXUS_OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.NEXUS_OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.NEXUS_SIGNING_KEYID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.NEXUS_SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingSecretKeyRingFile: "./secret_key.gpg"
          ORG_GRADLE_PROJECT_signingSecretKeyRingBase64: ${{ secrets.NEXUS_SIGNING_SECRET_KEY_BASE64 }}
        run: |
          [ -n "$ORG_GRADLE_PROJECT_signingKeyId" ] && \
          [ -n "$ORG_GRADLE_PROJECT_signingPassword" ] && \
          [ -n "$ORG_GRADLE_PROJECT_signingSecretKeyRingFile" ] && \
          [ -n "$ORG_GRADLE_PROJECT_signingSecretKeyRingBase64" ] && \
          ./gradlew uploadArchives

#       - name: upload artifact ckb.jar to GitHub release page
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ needs.create_release_draft.outputs.upload_url }}
#           asset_path: ./ckb/build/libs/ckb*.jar
#           asset_name: ckb-${{ needs.create_release_draft.outputs.tag }}.jar
#           asset_content_type: application/zip
